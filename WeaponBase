using UnityEngine;
using System.Collections;

public class WeaponBase : MonoBehaviour {

	//Prefab for bullets
	public GameObject projectile;

	//Slots
	public Transform weaponSlot;	
	public Transform projectileSlot;

	//Rate of fire controlled by this vars
	public float delayBetweenShots = 1; // секунд между выстрелами
	protected float timeLastShot = 0;

	//Reload controlled by this vars
	public float reloadTime = 1.5f; //in seconds
	public bool isReloading = false;
	public int maxBulletsInCage = 100; //патронов в обойме максимально
	public int bulletsTotal = 500; // всего патронов данного типа
	protected int bulletsLeftInCage = 0; // патронов осталось в обойме

	// Use this for initialization
	protected void Start () 
	{
		weaponSlot = GameObject.Find("WeaponSlot").transform;
		projectileSlot = GameObject.Find("ProjectileSlot").transform; 
	}
	
	// Update is called once per frame
	void Update () {
	
	}

	public  void Shoot()
	{
		if( isReloading )
		{
			//Идет перезарядка
			return;
		}

		if( bulletsLeftInCage <= 0 )
		{
			//патронов в обойме не осталось - стрелять нечем
			Reload();
			return;
		}

		if ( timeLastShot + delayBetweenShots <= Time.time )
		{

			timeLastShot = Time.time;

			//Выносим 2 var ниже в отдельную функцию которая управляет разбросом и кол-ом появляющихся пуль
			bulletsLeftInCage -= 1;
			Instantiate ( projectile, projectileSlot.position, projectileSlot.rotation );

		}
	}

	public void Reload()
	{
		if( isReloading || ( bulletsLeftInCage == 0 && bulletsTotal == 0 ) )
		{
			//уже перезаряжаемся или патронов нет
			return;
		}

		StartCoroutine( ReloadProcess() );
	}
	protected IEnumerator ReloadProcess()
	{
		isReloading = true;

		yield return new WaitForSeconds ( reloadTime );

		bulletsTotal += bulletsLeftInCage;
		bulletsLeftInCage = 0;
		if ( bulletsTotal >= maxBulletsInCage )
		{
			bulletsLeftInCage = maxBulletsInCage;
			bulletsTotal -= maxBulletsInCage;
		}
		else
		{
			maxBulletsInCage = bulletsTotal;
			bulletsTotal = 0;
		}

		isReloading = false;

	}

	public string GetStatus()
	{
		if(isReloading)
		{
			return "R E L O A D I N G";
		}
		else
		{
			return bulletsLeftInCage + " / " + bulletsTotal;
		}
	}

	public void SwitchWeaponOut()
	{
		StopCoroutine(ReloadProcess());
		isReloading = false;
	}

	public void SwitchWeaponOnThis()
	{
		//Ну, можно начать перезарядку если патронов нет
		// Reload()
	}
}
